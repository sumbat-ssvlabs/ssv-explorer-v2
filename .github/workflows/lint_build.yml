name: Build & deploy

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

  workflow_dispatch:

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    env:
      STAGE_SSV_NETWORKS: >
        [
          {
            "networkId": 560048,
            "apiVersion": "v4",
            "apiNetwork": "hoodi",
            "api": "https://api.stage.ops.ssvlabsinternal.com/api",
            "explorerUrl": "https://hoodi-explorer.stage.ssv.network",
            "insufficientBalanceUrl": "https://faucet.stage.ssv.network",
            "googleTagSecret": "87987987987",
            "tokenAddress": "0x746c33ccc28b1363c35c09badaf41b2ffa7e6d56",
            "bAppContractAddress": "0x40d959B95e7c56962D6d388d87921c03734b9C2C",
            "setterContractAddress": "0x746c33ccc28b1363c35c09badaf41b2ffa7e6d56",
            "getterContractAddress": "0x746c33ccc28b1363c35c09badaf41b2ffa7e6d56"
          }
        ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20.12.2

      - uses: pnpm/action-setup@v2
        with:
          version: 9.0.6

      - uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm lint

      # <explorer.stage.ssv.network>
      - name: Run stage build
        if: github.ref == 'refs/heads/stage'
        env:
          SSV_NETWORKS: "${{ env.STAGE_SSV_NETWORKS }}"
          NEXT_PUBLIC_SSV_NETWORKS: "${{ env.STAGE_SSV_NETWORKS }}"

        run: pnpm build
      # </explorer.stage.ssv.network>

      # <explorer.ssv.network>
      - name: Run prod build
        if: github.ref == 'refs/heads/main'
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          API_BASE_URL: ${{ secrets.PROD_API_BASE_URL_V4 }}
          ANNOUNCEMENT: ${{ secrets.PROD_ANNOUNCEMENT_V4 }}
          LINK_SSV_WEBAPP: ${{ secrets.PROD_LINK_SSV_WEBAPP_V4 }}
          GOOGLE_TAG_SECRET: ${{ secrets.PROD_GOOGLE_TAG_SECRET_V4 }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN_PROD }}
        run: pnpm build

      - name: Deploy prod
        if: github.ref == 'refs/heads/main'
        uses: jakejarvis/s3-sync-action@v0.5.0
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          AWS_S3_BUCKET: ${{ secrets.PROD_AWS_S3_BUCKET_V4 }}
          ANNOUNCEMENT: ${{ secrets.PROD_ANNOUNCEMENT_V4 }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_SECRET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "build/"
      # </explorer.ssv.network>

      # <hoodi.explorer.ssv.network>
      - name: Run prod testnet build
        if: github.ref == 'refs/heads/main'
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          API_BASE_URL: ${{ secrets.PROD_API_BASE_URL_V4_HOODI }}
          ANNOUNCEMENT: ${{ secrets.PROD_ANNOUNCEMENT_V4_HOODI }}
          LINK_SSV_WEBAPP: ${{ secrets.PROD_LINK_SSV_WEBAPP_V4 }}
          GOOGLE_TAG_SECRET: ${{ secrets.PROD_GOOGLE_TAG_SECRET_V4_TESTNET }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN_PROD }}
        run: pnpm build

      - name: Deploy prod testnet
        if: github.ref == 'refs/heads/main'
        uses: jakejarvis/s3-sync-action@v0.5.0
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          AWS_S3_BUCKET: ${{ secrets.PROD_AWS_S3_BUCKET_V4_HOODI }}
          ANNOUNCEMENT: ${{ secrets.PROD_ANNOUNCEMENT_V4_HOODI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_SECRET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "build/"
      # </hoodi.explorer.ssv.network>
